program dec_list declaration id_list type_1 vector_decl type stmt_list stmt simple_stmt assignmnt expression operation term elem_vector io_stmt struct_stmt while_stmt if_stmt for_stmt condition relation unary_operation
start finish ; identifier nr const , bool char int real vector [ ] = + - * / & | ^ ! get print while : else endif for from to endfor < > == <= >= != sqrt
program
program start@dec_list@stmt_list@finish
dec_list declaration@;
dec_list declaration@;@dec_list
declaration type@id_list
id_list identifier
id_list identifier@,@id_list
type_1 bool
type_1 char
type_1 int
type_1 real
vector_decl type_1@vector@[@nr@]
type type_1
type vector_decl
stmt_list stmt
stmt_list stmt@stmt_list
stmt simple_stmt@;
stmt struct_stmt
simple_stmt assignmnt
simple_stmt io_stmt
assignmnt identifier@=@expression
assignmnt elem_vector@=@expression
expression term
expression term@operation@expression
expression unary_operation@expression
unary_operation !
unary_operation sqrt
operation +
operation -
operation *
operation /
operation &
operation |
operation ^
term identifier
term const
term elem_vector
elem_vector identifier@[@const@]
elem_vector identifier@[@identifier@]
io_stmt get@id_list
io_stmt print@id_list
struct_stmt while_stmt
struct_stmt if_stmt
struct_stmt for_stmt
while_stmt while@condition@:@stmt_list@endwhile
if_stmt if@condition@:@stmt_list@endif
if_stmt if@condition@:@stmt_list@else@:@stmt_list@endif
for_stmt for@identifier@from@const@to@const@:@stmt_list@endfor
for_stmt for@identifier@from@const@to@identifier@:@stmt_list@endfor
condition expression@relation@expression
relation <
relation >
relation ==
relation <=
relation >=
relation !=
